{"version":3,"sources":["components/Expenses/Expenses.module.css","components/Inputs/Inputs.module.css","components/Incomes/Incomes.module.css","components/Viewes/Viewes.module.css","components/Balance/Balance.module.css","components/BalanceList/BalanceList.module.css","App.module.css","contexts/BalanceContext.js","components/Balance/Balance.js","components/Incomes/Incomes.js","components/Expenses/Expenses.js","components/BalanceList/BalanceList.js","components/Inputs/Inputs.js","components/Viewes/Viewes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BalanceContext","React","createContext","BalanceContextProvider","state","balance","expenses","incomes","positive","add","obj","tempObj","sign","setState","prevState","props","push","Number","sum","deleteExpense","index","tempExpenses","deletedExpese","splice","deleteIncome","tempIncome","deletedIncome","changeColor","numberWithCommas","number","toString","pattern","test","replace","Provider","value","this","children","Component","month","date","Date","Balance","sumOfBalance","context","toFixed","className","classes","getMonth","contextType","Incomes","incomeElements","map","income","key","li","description","onClick","delete","header","list","Expenses","idx","length","expenseElements","expense","percent","Math","ceil","Infinity","floor","BalanceList","Inputs","changeHandler","e","target","id","checkFields","descriptionInputRef","current","sumInputRef","alert","selectHandler","createRef","style","borderRadius","border","nagative","InputsContainer","onChange","select","ref","placeholder","type","Viewes","percentIsValid","isNaN","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd574e04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Expenses\":\"Expenses_Expenses__3YNXU\",\"list\":\"Expenses_list__1ITJB\",\"li\":\"Expenses_li__2eQnf\",\"header\":\"Expenses_header__16Tgn\",\"delete\":\"Expenses_delete__1wBkN\",\"percent\":\"Expenses_percent__38B8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputsContainer\":\"Inputs_InputsContainer__QVezd\",\"Inputs\":\"Inputs_Inputs__3DnDi\",\"description\":\"Inputs_description__pd4HP\",\"sum\":\"Inputs_sum__1vQax\",\"add\":\"Inputs_add__2nams\",\"select\":\"Inputs_select__3Lyxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Incomes\":\"Incomes_Incomes__3bQfC\",\"list\":\"Incomes_list__MzTM7\",\"li\":\"Incomes_li__2y2It\",\"header\":\"Incomes_header__3Rz7r\",\"delete\":\"Incomes_delete__lWv6t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Viewes\":\"Viewes_Viewes__2Fx96\",\"expense\":\"Viewes_expense__3JTJj\",\"income\":\"Viewes_income__3FIV6\",\"percent\":\"Viewes_percent__2PkTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balance_Balance__3v0Zo\",\"month\":\"Balance_month__3lndJ\",\"balance\":\"Balance_balance__ZhIVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BalanceList\":\"BalanceList_BalanceList__1ym-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3T66U\"};","import React, { Component } from 'react';\n\nexport const BalanceContext = React.createContext();\n\nclass BalanceContextProvider extends Component {\n\n    state = {balance: 0, expenses: [], incomes: [], positive: true};\n\n    render() {\n\n        return (\n            <BalanceContext.Provider value={{\n                    ...this.state,\n                    add: this.add,\n                    deleteExpense: this.deleteExpense,\n                    deleteIncome: this.deleteIncome,\n                    changeColor: this.changeColor,\n                    numberWithCommas: this.numberWithCommas\n                }}>\n                {this.props.children}\n            </BalanceContext.Provider>\n        )\n    }\n\n    add = (obj) => {\n      \n        let tempObj = {...obj};\n        let sign = tempObj.sign;\n      \n        if(sign === \"+\") {    \n            this.setState((prevState, props) => {\n                let incomes = [...prevState.incomes];\n                incomes.push(tempObj);\n                return {\n                    incomes: incomes,\n                    balance: prevState.balance + Number(tempObj.sum)\n                }\n            });\n        }\n        else {\n            this.setState((prevState, props) => {\n                let expenses = [...prevState.expenses];\n                expenses.push(tempObj);\n                return {\n                    expenses: expenses,\n                    balance: prevState.balance - Number(tempObj.sum)\n                }\n            });\n        }\n    }\n\n    deleteExpense = (index) => {\n        this.setState((prevState, props) => {\n            let tempExpenses = [...prevState.expenses];\n            let deletedExpese = tempExpenses[index].sum;\n            tempExpenses.splice(index, 1);\n            \n            return {\n                expenses: tempExpenses,\n                balance: prevState.balance + Number(deletedExpese)\n            }\n        });\n    }\n\n    deleteIncome = (index) => {\n        this.setState((prevState, props) => {\n            let tempIncome = [...prevState.incomes];\n            let deletedIncome = tempIncome[index].sum;\n            tempIncome.splice(index, 1);\n                    \n            return {\n                incomes: tempIncome,\n                balance: prevState.balance - Number(deletedIncome)\n            }\n        });\n    }\n\n    changeColor = (sign) => {\n        if(sign === \"+\"){\n            this.setState({positive: true});\n        }\n        else{\n            this.setState({positive: false});\n        }\n    }\n\n    numberWithCommas = (number) => {\n        number = number.toString();\n        let pattern = /(-?\\d+)(\\d{3})/;\n        while (pattern.test(number)){\n            number = number.replace(pattern, \"$1,$2\");\n        }        \n        return number;\n    }\n}\n\nexport default BalanceContextProvider;","import React, { Component } from 'react';\nimport classes from './Balance.module.css';\nimport { BalanceContext } from '../../contexts/BalanceContext';\n\nconst month = [\n    \"January\", \"February\", \"March\",\n    \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\",\n    \"October\",\"November\", \"December\"\n];\n\nconst date = new Date();\n\nclass Balance extends Component {\n\n    static contextType = BalanceContext;\n    \n    render() {\n        \n        const sumOfBalance = this.context.balance.toFixed(2);\n\n        return (\n            <div className={classes.Balance}>\n                <div>\n                    <h2 className={classes.month}>Available Budget In {month[date.getMonth()]}</h2>\n                    <h1 className={classes.balance}>\n                        {this.context.numberWithCommas(this.context.balance >= 0 ? \"+\" + sumOfBalance : sumOfBalance)}\n                    </h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Balance;","import React, { Component } from 'react';\nimport { BalanceContext } from '../../contexts/BalanceContext';\nimport classes from './Incomes.module.css';\n\nclass Incomes extends Component {\n\n    static contextType = BalanceContext;\n\n    render() {\n        \n        let incomeElements = this.context.incomes.map((income, index) => {\n            return <li key={index} className={classes.li}>\n                <strong>\n                    <span>{income.description}</span>\n                </strong>\n                <div>\n                    <strong>\n                        <span>\n                            <span>{income.sign}</span>\n                            <span>{this.context.numberWithCommas(Number(income.sum).toFixed(2))}</span>\n                        </span>\n                    </strong>\n                    <i onClick={() => this.context.deleteIncome(index)} className={`fas fa-trash-alt ${classes.delete}`}/>\n                </div>\n            </li>\n        });\n        \n        return (\n            <div className={classes.Incomes}>\n                <h1 className={classes.header}>Incomes</h1>\n                <ul className={classes.list}>\n                    {incomeElements}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Incomes;","import React, { Component } from 'react';\nimport { BalanceContext } from '../../contexts/BalanceContext';\nimport classes from './Expenses.module.css';\n\nclass Expenses extends Component {\n\n    static contextType = BalanceContext;\n\n    render() {\n\n        let incomes = 0;\n\n        for (let idx = 0; idx < this.context.incomes.length; idx++) {\n            incomes += Number(this.context.incomes[idx].sum);\n        }\n\n        let expenseElements = this.context.expenses.map((expense, index) => {\n\n            let percent = Math.ceil(Number(expense.sum) * 100 / incomes);\n            \n            return <li key={index} className={classes.li}>\n                <strong>\n                   <span>{expense.description}</span>\n                </strong>\n                <div>\n                    <span>\n                        <strong>\n                            <span>{expense.sign}</span>\n                            <span>{this.context.numberWithCommas(Number(expense.sum).toFixed(2))}</span>\n                        </strong>\n                        <span className={classes.percent}>\n                            {percent === Infinity ? <span>-</span> : <span>{Math.floor(Number(expense.sum) * 100 / incomes)}%</span>}\n                        </span>\n                    </span>\n                    <i onClick={() => this.context.deleteExpense(index)} className={`fas fa-trash-alt ${classes.delete}`}/>\n                </div>\n            </li>\n        });\n\n        return (\n            <div className={classes.Expenses}>\n                <h1 className={classes.header}>Expenses</h1>\n                <ul className={classes.list}>\n                    {expenseElements}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Expenses;","import React from 'react';\nimport Incomes from '../Incomes/Incomes';\nimport Expenses from '../Expenses/Expenses';\nimport classes from './BalanceList.module.css';\n\nfunction BalanceList() {\n    return (\n        <div className={classes.BalanceList}>\n            <Incomes/>\n            <Expenses/>\n        </div>\n    )\n}\n\nexport default BalanceList;","import React, { Component } from 'react';\nimport { BalanceContext } from '../../contexts/BalanceContext';\nimport classes from './Inputs.module.css';\n\nclass Inputs extends Component {\n\n    static contextType = BalanceContext;\n\n    constructor(){\n        super();\n\n        this.descriptionInputRef = React.createRef();\n        this.sumInputRef = React.createRef();\n\n        this.balance = {\n            description: null,\n            sum: null,\n            sign: \"+\"\n        };\n\n        this.style = {\n            positive: {\n                borderRadius: \"5px\",\n                border: \"2px solid lightgreen\"\n            },\n            nagative: {\n                borderRadius: \"5px\",\n                border: \"2px solid salmon\"\n            }\n        };\n    }\n   \n    render() {\n\n        return (\n            <div className={classes.InputsContainer}>\n                <div className={classes.Inputs}>\n                    <select id=\"sign\"\n                        onChange={this.selectHandler}\n                        className={classes.select}\n                        style={this.context.positive ? this.style.positive : this.style.nagative}>\n                        <option value=\"+\">+</option>\n                        <option value=\"-\">-</option>\n                    </select>\n                    <input\n                        ref={this.descriptionInputRef}\n                        placeholder=\"Description\"\n                        id=\"description\"\n                        className={classes.description}\n                        style={this.context.positive ? this.style.positive : this.style.nagative}\n                        onChange={this.changeHandler}/>\n                    <input\n                        ref={this.sumInputRef}\n                        type=\"number\"\n                        placeholder=\"Sum\"\n                        id=\"sum\"\n                        className={classes.sum}\n                        style={this.context.positive ? this.style.positive : this.style.nagative}\n                        onChange={this.changeHandler}/>\n                    <button\n                        onClick={this.checkFields}\n                        className={classes.add}\n                        style={this.context.positive ? this.style.positive : this.style.nagative}>\n                        Add\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    changeHandler = (e) => {\n        this.balance[e.target.id] = e.target.value;\n    }\n\n    checkFields = () => {\n        if(this.balance.description && this.balance.sum > 0){\n            this.context.add(this.balance);\n            this.descriptionInputRef.current.value = \"\";\n            this.sumInputRef.current.value = \"\";\n            this.balance.description = null;\n            this.balance.sum = null;\n        }\n        else{\n            alert(\"You need to fill all the fields and the number has to be bigger than 0!!!\");\n        }\n    }\n\n    selectHandler = (e) => {\n        this.changeHandler(e);\n        this.context.changeColor(this.balance.sign);\n    }\n}\n\nexport default Inputs;","import React, { Component } from 'react';\nimport classes from './Viewes.module.css';\nimport { BalanceContext } from '../../contexts/BalanceContext';\n\nexport default class Viewes extends Component {\n    \n    static contextType = BalanceContext;\n    \n    render() {\n\n        let expenses = 0;\n        let incomes = 0;\n        let percent = 0;\n        let percentIsValid = false;\n        \n        for (let idx = 0; idx < this.context.incomes.length; idx++) {\n            incomes += Number(this.context.incomes[idx].sum);\n        }\n\n        for (let idx = 0; idx < this.context.expenses.length; idx++) {\n            expenses += Number(this.context.expenses[idx].sum);            \n        }\n        \n        percent = expenses * 100 / incomes;\n        percentIsValid = ((percent && !isNaN(percent)) && (percent !== Infinity));\n        \n        return (\n            <div className={classes.Viewes}>\n                <div>\n                    <div className={classes.income}>\n                        <span>\n                            <strong>INCOME</strong>\n                        </span>\n                        <span>\n                            <span>+</span>\n                            <span>{this.context.numberWithCommas(incomes.toFixed(2))}</span>\n                        </span>\n                    </div>\n                    <div className={classes.expense}>\n                        <span>\n                            <strong>EXPENSES</strong>\n                        </span>\n                        <span>\n                            <span>-</span>\n                            <span>{this.context.numberWithCommas(expenses.toFixed(2))}</span>\n                            {percentIsValid ?\n                                <span className={classes.percent}>\n                                    {percent === Infinity ? <span>-</span> : percent ? <span>{Math.floor(percent)}%</span> : <span>-</span>}\n                                </span>\n                            : null}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Balance from './components/Balance/Balance';\nimport BalanceContextProvider from './contexts/BalanceContext';\nimport BalanceList from './components/BalanceList/BalanceList';\nimport Inputs from './components/Inputs/Inputs';\nimport Viewes from './components/Viewes/Viewes';\nimport classes from './App.module.css';\n\nfunction App() {\n  return (\n    <div>\n        <BalanceContextProvider>\n          <div className={classes.App}>\n            <Balance/>\n            <Viewes/>\n          </div>\n          <Inputs/>\n          <BalanceList/>\n        </BalanceContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}